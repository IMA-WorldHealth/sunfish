extends ../layout.pug

block content
  .container
    .columns
      .column.col-12
        table.table.table-striped
          thead
            tr
              th #{t('SCHEDULES.SUBJECT')}
              th #{t('SCHEDULES.FREQUENCY')}
              th #{t('SCHEDULES.LAST_RUN')}
              th #{t('SCHEDULES.NEXT_RUN')}
              th #{t('SCHEDULES.DASHBOARDS')}
              th #{t('SCHEDULES.GROUP')}
              th #{t('SCHEDULES.CREATED')}
              th #{t('SCHEDULES.ACTIONS')}
          tbody
            each row in schedules
              tr
                td #{row.subject}
                td #{row.cron}
                td(title=row.prevRunTime)
                  if row.prevRunTime
                    i #{row.prevRunTimeLabel}
                  else
                    i ---
                td(title=row.nextRunTime)
                  if row.paused
                    i.text-gray paused
                  else
                    i #{row.nextRunTimeLabel}
                td(title=row.dashboards) #{row.dashboards}
                td(title=row.userGroupId) #{row.userGroupName}
                td(title=row.created) #{row.createdLabel}
                td
                  .dropdown.dropdown-right
                    a(href="#", tabindex="0").btn.btn-link.dropdown-toggle #{t('SCHEDULES.ACTIONS')}
                      i.icon.icon-caret

                    ul(style="width:200px;").menu

                      li.menu-item
                        - const detailUrl = `/schedules/${row.id}/details`;
                        a(href=detailUrl).text-primary
                          i.icon.icon-edit
                          span(style="padding-left:0.6em;") #{t('ACTIONS.VIEW')}

                      li.menu-item
                        - const triggerUrl = `/schedules/${row.id}/trigger`;
                        a(href=triggerUrl).text-success
                          i.icon.icon-refresh
                          span(style="padding-left:0.6em;") #{t('ACTIONS.TRIGGER')}

                      li.menu-item
                        - const pauseUrl = `/schedules/${row.id}/pause`;
                        if !row.paused
                          a(href=pauseUrl).text-warning
                            i.icon.icon-stop
                            span(style="padding-left:0.6em;") #{t('ACTIONS.PAUSE')}
                        else
                          a(href=pauseUrl).text-primary
                            i.icon.icon-check
                            span(style="padding-left:0.6em;") #{t('ACTIONS.UNPAUSE')}

                      li.divider

                      li.menu-item
                        - const deleteUrl = `/schedules/${row.id}/delete`;
                        a(href=deleteUrl).text-error
                          i.icon.icon-delete
                          span(style="padding-left:0.6em;") #{t('ACTIONS.DELETE')}

        unless schedules.length
          .empty
            .empty-icon
              i.icon.icon-3x.icon-bookmark
            p.empty-title.h4 #{t('SCHEDULES.EMPTY_TITLE')}
            p.empty-subtitle #{t('SCHEDULES.EMPTY_SUBTITLE')}

        br
        a(href="schedules/create", data-add-loading).btn.btn-primary #{t('SCHEDULES.ADD')}
